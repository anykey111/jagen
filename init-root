#!/bin/sh

env_file="env.sh"
config_file="local.sh"

show_help() {
    cat <<EOF
Usage: init-root [-h] [-f] [-s] [SDK]

  Initializes current directory as jagen build root.

SYNOPSIS:

  The script will put environment file '$env_file' in the current directory.
  This file should be sourced in the current shell before issuing any other
  jagen commands. Example:

    cd $PWD
    $root/init-root
    . ./$env_file

  For subsequent invocations:

    cd $PWD
    . ./$env_file

  Note that '$env_file' should be sourced with working directory set to the
  build root.

  The template configuration file '$config_file' will be added to the build
  root. The existing file will not be overwritten unless the '-f' flag is
  given. If SDK is specified it will be set in config.

  The '-s' flag specifies that the source packages should be kept in the jagen
  project root. Without this flag the location of sources will be set to the
  build root.

  NOTE: To use remotely mounted build root pathname to the init-root script
  should be specified relative to the current directory and 'relative' should
  be given as an argument when sourcing '$env_file'. Example:

    cd /mnt/src/build
    . ./$env_file relative

EOF
}

write_env() {
    cat >"$env_file" <<EOF
jagen_relative_root="$root"

if [ "\$1" = relative ]; then
    jagen_root="\$jagen_relative_root"
else
    jagen_root="$real_root"
fi

export jagen_root
export jagen_build_root="\$PWD"

. "\$jagen_root/lib/env.sh"; sts=\$?
if [ \$sts != 0 ]; then
    echo "Error: failed to load jagen environment"
    return \$sts
fi

add_PATH "\$pkg_private_dir/bin"
add_PATH "\$jagen_root/bin"
EOF
}

write_config() {
    cat >"$config_file" <<EOF
# Current build root configuration type.
pkg_sdk="$sdk"

# A directory containing SDK (optional).
# jagen_sdk_dir=""

# A directory containing target toolchain.
jagen_toolchain_dir=""

# A directory containing software distributions and patches.
# pkg_dist_dir=""

# A directory where source packages will be checked out.
pkg_src_dir="$source_dir"

# A directory where build products will be stored.
pkg_build_dir="\$jagen_build_root/build"

# Space separated list of optional features.
#   debug - build debugging tools
pkg_flags=""

# Package names excluded from clear and update during rebuilds.
# Example: pkg_source_exclude='chicken karaoke-player'
pkg_source_exclude=""

# Global build type.
# Available values: Release|RelWithDebInfo|Debug
pkg_build_type="Release"
EOF
}

die() { [ $# = 0 ] || echo "Error: $@"; exit 1; }

root=$(dirname $0)
real_root=$(cd "$root"; pwd -P)
sdk=''
use_force=''
use_source=''

for arg; do
    [ "$arg" = '-h' ] && { show_help; exit 0; }
    [ "$arg" = '-f' ] && { use_force=1; continue; }
    [ "$arg" = '-s' ] && { use_source=1; continue; }
    [ "$sdk" ] || { sdk="$arg";  continue; }
done

if [ "$use_source" ]; then
    source_dir='$jagen_root/src'
else
    source_dir='$jagen_build_root/src'
fi

write_env || die

if [ -f "$config_file" -a ! "$use_force" ]; then
    echo "Not overwriting '$config_file'"
else
    write_config "$config_file" || die
fi
