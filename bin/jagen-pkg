#!/bin/sh

. "$jagen_dir/lib/pkg.sh" || die "Failed to load pkg env"

pkg_build_root="$jagen_build_dir/pkg"

pkg_name="$1"
pkg_stage="$2"
pkg_config="$3"

pkg_log="${jagen_build_dir}/${pkg_name}-${pkg_stage}${pkg_config:+-${pkg_config}}.log"
pkg_work_dir="$pkg_build_root/$pkg_name"

rm -f "$pkg_log" || die "Failed to rm $pkg_log"
mkdir -p "$pkg_work_dir" || die "Failed to mkdir $pkg_work_dir"
cd "$pkg_work_dir" || die "Failed to cd to $pkg_work_dir"

include "$jagen_build_include_dir/$pkg_name" "$pkg_config"
include "$jagen_lib_dir/pkg/$pkg_name" 

pkg_source_name="$(_jagen src name "$pkg_source")"
pkg_source_dir="${pkg_source_dir:-$pkg_work_dir/$pkg_source_name}"
pkg_build_dir="${pkg_build_dir:-$pkg_source_dir}"

run_stage() {
    local name="$1"
    local pkg="$pkg_name${pkg_config:+ ($pkg_config)}"

    if is_function "$name"; then
        debug "$pkg: $name"
        eval "$name" >"$pkg_log" 2>&1 || die "Failed to run '$name' stage of package $pkg"
    fi
}

if [ "$pkg_config" ]; then
    use_toolchain "$pkg_config"
fi

if [ "$pkg_config" = 'host' ]; then
    pkg_system="$host_system"
    pkg_prefix="$jagen_host_prefix"
    pkg_dest_dir="$jagen_host_dir"
elif [ "$pkg_config" = 'target' ]; then
    pkg_system="$target_system"
    pkg_prefix="$jagen_target_prefix"
    pkg_dest_dir="$jagen_target_dir"
elif [ "$pkg_config" = 'tools' ]; then
    pkg_system="$host_system"
    pkg_prefix=""
    pkg_dest_dir="$jagen_tools_dir"
elif [ "$pkg_config" = 'rootfs' ]; then
    use_toolchain target
    pkg_system="$target_system"
    pkg_prefix=""
    pkg_dest_dir="$sdk_rootfs_prefix"
fi

[ -d "$pkg_build_dir" ] && cd "$pkg_build_dir"

run_stage "jagen_pkg_${pkg_stage}_pre"

if is_function "jagen_pkg_${pkg_stage}_${pkg_config}"; then
    run_stage "jagen_pkg_${pkg_stage}_${pkg_config}"
else
    run_stage "jagen_pkg_${pkg_stage}"
fi

run_stage "jagen_pkg_${pkg_stage}_post"
