#!/bin/sh

[ "$pkg_root" ] ||
    { echo "pkg_root is not set, please source env.sh in the project root.";
      exit 1; }

. "$pkg_root/lib/pkg.sh" ||
    { echo "Failed to load pkg environment"; exit 1; }
. "$pkg_root/lib/help.sh" ||
    { echo "Failed to load help"; exit 1; }

if [ $# = 0 ]; then
    print_help
    exit
fi

build_file="$pkg_build_dir/build.ninja"

build() {
    local IFS tab
    local target target_path targets

    IFS="$(printf '\n\t')"; tab="$(printf '\t')"

    for target in "$@"; do
        target_path="$pkg_build_dir/$target"
        targets="${targets}${tab}${target_path}"
    done

    ninja -f "$build_file" $targets

    return $?
}

rebuild() {
    local IFS tab
    local targets_only show_all
    local target target_path targets logs status
    local rebuild_log

    IFS="$(printf '\n\t')"; tab="$(printf '\t')"

    [ "$1" = "--targets-only" ] && { shift; targets_only=1; }
    [ "$1" = "--show-all" ] && { shift; show_all=1; }

    rebuild_log="$pkg_build_dir/rebuild.log"
    : > "$rebuild_log"

    for target in "$@"; do
        target_path="$pkg_build_dir/$target"
        targets="${targets}${tab}${target_path}"
        logs="${logs}${tab}${target_path}.log"
        if [ -f "$target_path" ]; then
            rm -f "$target_path"
        else
            warning "Target $target is not exists"
        fi
    done

    [ "$targets" ] || die "No targets specified, nothing to rebuild"

    if [ "$show_all" ]; then
        tail -qFn0 "$pkg_build_dir"/*.log 2>/dev/null &
    else
        tail -qFn0 $logs "$rebuild_log" 2>/dev/null &
    fi

    if [ "$targets_only" ]; then
        ninja -f "$build_file" $targets >"$rebuild_log"; status=$?
    else
        ninja -f "$build_file" >"$rebuild_log"; status=$?
    fi

    kill $!
    return $status
}

rebuild_chibi() {
    for s in clean unpack build install; do
        "$pkg_bin_dir/jagen-pkg" chibi-scheme $s tools \
            || die "Failed to $s chibi-scheme"
    done
}

case $1 in
    help)
        print_help
        ;;
    clean)
        p_clean_dir "$pkg_build_dir"
        exec jagen refresh
        ;;
    update)
        if p_src_is_dirty "$pkg_root"; then
            warning "$pkg_root is dirty, not updating"
        else
            p_src_pull "$pkg_root"
        fi
        exec jagen refresh
        ;;
    refresh)
        use_env tools
        message "Refreshing build rules"
        in_path chibi-scheme || rebuild_chibi
        $pkg_bin generate "$build_file" "$pkg_lib_dir/rules.scm" ||
            die "Failed to generate build rules"
        include "$pkg_root/lib/toolchain"
        generate_toolchain_wrappers
        ;;
    build)
        shift
        build "$@" || die "Build failed"
        ;;
    rebuild)
        shift
        rebuild "$@" || die "Rebuild failed"
        ;;
    *)
        die "Unknown command: $1"
        ;;
esac
